replicaCount: 3

image:
  repository: nginx
  tag: latest

service:
  type: ClusterIP
  port: 80
  targetPort: 80

configMap:
  data:
    key1: value1
    key2: value2
    file: |
      This is a sample file content
      that will be accessible via /conf/fil

#configMaps:
#  nginxConfig: "{{ .Release.Name }}-nginx-config"
#  homeworkConfig: "{{ .Release.Name }}-configmap"
configMaps:
  nginxConfig: "nginx-config"
  homeworkConfig: "homework-config"

serviceAccount:
  name: monitoring-sa
  namespace: default
  annotations: {}
    # kubernetes.io/enforce-mountable-secrets: "true"

namespace:
  name: my-namespace
  labels:
    environment: development
    # Add more labels as needed

serviceMonitor:
  name: my-service-monitor
  labels:
    release: prometheus
  selector:
    app: my-app
  namespace: my-namespace
  endpoints:
    - port: http-metrics
      interval: 15s
    - port: additional-metrics
      interval: 30s
      path: /metrics

storageClass:
  name: my-storage
  provisioner: k8s.io/minikube-hostpath
  reclaimPolicy: Retain

initContainers:
  - name: init-container
    image: busybox
    command: ['sh', '-c', 'echo "<html><body><h1>Hello, World!</h1></body></html>" > /homework/index.html']
    mountPath: /homework

webServerContainer:
  - name: web-server
    image: nginx
    ports:
      - containerPort: 80
    volumeMounts:
      - name: shared-volume
        mountPath: /homework
      - name: nginx-config
        mountPath: /etc/nginx/conf.d
      - name: homework-config
        mountPath: /homework/conf
    readinessProbe:
      httpGet:
        path: /index.html
        port: 80
      exec:
        command:  ["/bin/sh", "-c", "test -f /homework/index.html"]
#        command:  ["/bin/sh", "-c", "test -f /homework/index.html"]
##          - "ls -l /homework && cat /homework/index.html && test -f /homework/index.html"
      initialDelaySeconds: 10
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 5
metricsContainer:
  - name: metrics-container
    image: curlimages/curl
    command: ["/bin/sh"]
    args:    
      - -c, 
      - "echo 'Hello, World!'"
    volumeMounts:
      - name: shared-volume
        mountPath: /homework

persistentVolumeClaim:
  name: my-pvc
  namespace: default
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  storage: 1Gi
  storageClassName: my-storage

cdSa:                                                                                                                                                  
  serviceAccount:                                                                                                                                      
    name: cd                                                                                                                                        
    namespace: default
  RoleBinding:
    name: cd-admin                                                                                                                                        
    namespace: default
  monitoringRole:
    name: monitoring
    namespace: default
  metricsReaderRole:
    name: metrics-reader
    rules:
      - apiGroups: [""]                                                                                                                                
        resources: ["pods", "services", "endpoints", "configmaps"]                                                                                       
        verbs: ["get", "list", "watch"]                                                                                                                 
      - apiGroups: ["apps"]                                                                                                                            
        resources: ["deployments"]                                                                                                                     
        verbs: ["get", "list", "watch"]
  clusterRoleBinding:                                                                                                                                  
    name:  monitoring-metrics-reader   
    namespace: default

webhook:
  caBundle: ""  # This should be filled with the actual CA bundle
  replicaCount: 1
  image:
    repository: your-webhook-image-repository
    tag: latest
    pullPolicy: IfNotPresent
  
